{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/react-practice/src/app/admin_signup/page.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nconst SignupPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const router = useRouter();\r\n\r\n  const handleSignup = async () => {\r\n    setError(\"\"); // Clear previous errors\r\n    setSuccess(\"\"); // Clear previous success message\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8001/user/admin\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        mode: \"cors\", // Explicitly set CORS mode\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      // ✅ Ensure the response is valid\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Signup failed. Please try again.\");\r\n      }\r\n\r\n      // ✅ Success case\r\n      const data = await response.json();\r\n      console.log(\"Signup Successful:\", data);\r\n\r\n      setSuccess(\"Signup successful! Redirecting to login...\");\r\n      setTimeout(() => router.push(\"/login\"), 2000); // Redirect after 2s\r\n    } catch (error) {\r\n      console.error(\"Signup error:\", error);\r\n      setError(error.message || \"An error occurred.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Enter email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Enter password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleSignup}>Submit</button>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;;AAEA,MAAM,aAAa;IACjB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,qLAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe;QACnB,SAAS,KAAK,wBAAwB;QACtC,WAAW,KAAK,iCAAiC;QAEjD,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,oCAAoC;gBAC/D,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,aAAa;gBACb,MAAM;gBACN,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAM;oBAAO;gBAAS;YAC/C;YAEA,iCAAiC;YACjC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI;YACrC;YAEA,iBAAiB;YACjB,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,sBAAsB;YAElC,WAAW;YACX,WAAW,IAAM,OAAO,IAAI,CAAC,WAAW,OAAO,oBAAoB;QACrE,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,SAAS,MAAM,OAAO,IAAI;QAC5B;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;0BAEzC,8OAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;0BAE1C,8OAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;0BAE7C,8OAAC;gBAAO,SAAS;0BAAc;;;;;;YAC9B,uBAAS,8OAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAM;0BAAI;;;;;;YACtC,yBAAW,8OAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAQ;0BAAI;;;;;;;;;;;;AAGjD;uCAEe"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}