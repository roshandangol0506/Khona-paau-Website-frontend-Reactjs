{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/e-commerce/frontend/src/app/products/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport postService from \"@/services/postService\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Products = () => {\r\n  const [products, setproducts] = useState([]);\r\n  const [userid, setUserid] = useState(null);\r\n  const [productid, setProductid] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const router = useRouter();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchProduct = async () => {\r\n    try {\r\n      const response = await postService.getvisibleProducts();\r\n      setproducts(response.data.data);\r\n      setError(null);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        setError(\r\n          `Server Error: ${error.response.status} - ${\r\n            error.response.data.message || \"Something went wrong\"\r\n          }`\r\n        );\r\n      } else if (error.request) {\r\n        setError(\r\n          \"Network error: Unable to reach the server. Please try again.\"\r\n        );\r\n      } else {\r\n        setError(\"An unexpected error occurred.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProduct();\r\n  }, []);\r\n\r\n  const handleUploadMyCart = async () => {\r\n    if (!productid || !userid) {\r\n      setError(\"All fields are required\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8001/uploadmycart\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ service_id: productid, user_id: userid }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to upload My Cart\");\r\n\r\n      setSuccess(\"Successfully uploaded My Cart\");\r\n    } catch (error) {\r\n      setError(\"Failed to upload My Cart: \" + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8001/api/checkAuth\", {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.isAuthenticated) {\r\n          setUser({\r\n            id: data.userId,\r\n            username: data.username,\r\n            email: data.email,\r\n          });\r\n          setIsLoading(false);\r\n        }\r\n      });\r\n  }, [router]);\r\n\r\n  const handlemycart = (items_id) => {\r\n    setProductid(items_id);\r\n    setUserid(user?.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (productid && userid) {\r\n      handleUploadMyCart();\r\n    }\r\n  }, [productid, userid]);\r\n\r\n  return (\r\n    <div>\r\n      {products.map((items, id) => {\r\n        return (\r\n          <div key={id}>\r\n            <img\r\n              src={`http://localhost:8001/items/${items.photo}`}\r\n              alt=\"photo\"\r\n              className=\"h-24 w-24 object-cover\"\r\n            />\r\n            <button\r\n              onClick={() =>\r\n                user ? handlemycart(items._id) : router.push(\"/user_login\")\r\n              }\r\n            >\r\n              Add to Cart\r\n            </button>\r\n\r\n            {items.name}\r\n            {items.subtitle}\r\n            {items.amount}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,WAAW;IACf,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,WAAW,MAAM,8HAAA,CAAA,UAAW,CAAC,kBAAkB;YACrD,YAAY,SAAS,IAAI,CAAC,IAAI;YAC9B,SAAS;QACX,EAAE,OAAO,OAAO;YACd,IAAI,MAAM,QAAQ,EAAE;gBAClB,SACE,CAAC,cAAc,EAAE,MAAM,QAAQ,CAAC,MAAM,CAAC,GAAG,EACxC,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,wBAC/B;YAEN,OAAO,IAAI,MAAM,OAAO,EAAE;gBACxB,SACE;YAEJ,OAAO;gBACL,SAAS;YACX;QACF;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,qBAAqB;QACzB,IAAI,CAAC,aAAa,CAAC,QAAQ;YACzB,SAAS;YACT;QACF;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,sCAAsC;gBACjE,QAAQ;gBACR,aAAa;gBACb,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE,YAAY;oBAAW,SAAS;gBAAO;YAChE;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAElC,WAAW;QACb,EAAE,OAAO,OAAO;YACd,SAAS,+BAA+B,MAAM,OAAO;QACvD;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,uCAAuC;YAC3C,QAAQ;YACR,aAAa;QACf,GACG,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC;YACL,IAAI,KAAK,eAAe,EAAE;gBACxB,QAAQ;oBACN,IAAI,KAAK,MAAM;oBACf,UAAU,KAAK,QAAQ;oBACvB,OAAO,KAAK,KAAK;gBACnB;gBACA,aAAa;YACf;QACF;IACJ,GAAG;QAAC;KAAO;IAEX,MAAM,eAAe,CAAC;QACpB,aAAa;QACb,UAAU,MAAM;IAClB;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa,QAAQ;YACvB;QACF;IACF,GAAG;QAAC;QAAW;KAAO;IAEtB,qBACE,8OAAC;kBACE,SAAS,GAAG,CAAC,CAAC,OAAO;YACpB,qBACE,8OAAC;;kCACC,8OAAC;wBACC,KAAK,CAAC,4BAA4B,EAAE,MAAM,KAAK,EAAE;wBACjD,KAAI;wBACJ,WAAU;;;;;;kCAEZ,8OAAC;wBACC,SAAS,IACP,OAAO,aAAa,MAAM,GAAG,IAAI,OAAO,IAAI,CAAC;kCAEhD;;;;;;oBAIA,MAAM,IAAI;oBACV,MAAM,QAAQ;oBACd,MAAM,MAAM;;eAhBL;;;;;QAmBd;;;;;;AAGN;uCAEe"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}