{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/react-practice/src/app/uploadproducts/page.js"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst page = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [subtitle, setSubtitle] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [photo, setPhoto] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [products, setproducts] = useState([]);\r\n\r\n  const handleUploadProduct = async () => {\r\n    if (!name || !subtitle || !amount || !description || !photo) {\r\n      setError(\"All fields are required\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"subtitle\", subtitle);\r\n    formData.append(\"amount\", amount);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"photo\", photo);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8001/uploaditemsimages\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        body: formData,\r\n      });\r\n      setSuccess(\"Successfully uploaded Products\");\r\n    } catch (error) {\r\n      setError(\"Failed to upload product\", error);\r\n    }\r\n  };\r\n\r\n  const fetchProduct = async () => {\r\n    try {\r\n      const response = await postService.getProducts();\r\n      setproducts(response.data.data);\r\n      setError(null);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        setError(\r\n          `Server Error: ${error.response.status} - ${\r\n            error.response.data.message || \"Something went wrong\"\r\n          }`\r\n        );\r\n      } else if (error.request) {\r\n        setError(\r\n          \"Network error: Unable to reach the server. Please try again.\"\r\n        );\r\n      } else {\r\n        setError(\"An unexpected error occurred.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProduct();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Subtitle\"\r\n        value={subtitle}\r\n        onChange={(e) => setSubtitle(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"Number\"\r\n        placeholder=\"Enter Amount\"\r\n        value={amount}\r\n        onChange={(e) => setAmount(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={(e) => setPhoto(e.target.files[0])} // Fix here\r\n      />\r\n      <button onClick={handleUploadProduct}>Submit</button>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n\r\n      <div>\r\n        {products.map((items, id) => {\r\n          return (\r\n            <div>\r\n              <img\r\n                src={`http://localhost:8001/items/${items.photo}`}\r\n                alt=\"photo\"\r\n                className=\"h-24 w-24 object-cover\"\r\n              />\r\n              {items.name}\r\n              {items.subtitle}\r\n              {items.amount}\r\n              {items.visable}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default page;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}